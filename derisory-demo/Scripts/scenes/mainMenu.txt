//The GUI, stored in a variable in order to allow re-usage when pausing
var GUI = {
x:0,y:0,
maxX:0,
maxY:3,
scene:"main",
subDisplay:"",
deleteTimer:0,
canDeleteTimer:false,
};

//The variables for the main menu screen, like stars
var mainMenu = {
    stars:[],
};

//add 30 stars
for (var i = 0; i < 30; i++) {
    mainMenu.stars.push([round(random(0, 439)), round(random(0, 439))]);
}

function text82(msg, x, y, size, guiX, guiY, center) {
    if (GUI.x == guiX && GUI.y == guiY) {
        var leOffSet = -16;
        if (center) {leOffSet -= msg.length * 4 * size;}
        rect(x + leOffSet, y, 8, 8);
    }
    text8(/*((GUI.x == guiX && GUI.y == guiY) ? "I" : "") +*/ msg /*+ ((GUI.x == guiX && GUI.y == guiY) ? "I" : "")*/, x, y, size, center);
};
var musicPlaying = {
    track:"",//musicTitleScreen
    nextTrack:"",//musicTitleScreen
    drumTrack:"",
    nextDrumTrack:"",
    volume:1,
    volumeTo:1,
    drumVolume:1,
    drumVolumeTo:1,
    transitionSpeed:0.01,
    loop:true,
    smoothTransition:true,
};

var savedTimers = [0, 0, 0, 0, 0];
var mainMenuScene = function() {
    //Resetting game scene things
    paused = false;
    dialogBox = {};
    cutscene.timer = 0;
    lastBossFaced = "";
    screenTitle = {
        "title":"",
        "titleSize":1,
        "subtitle":"",
        "subtitleSize":1,
        "resetTimer":-10,
        "fade":0,
        "fadeDir":0,
        "x":0,
        "y":0,
        "x2":0,
        "y2":0,
    };

    inventoryOpened = false;
    inventoryFade = 0;
    inventoryPage = 1;
    inventoryCursor = {
        x:0,
        y:0,
        showMap:false,
        mapX:-291,
        mapY:-141,
        blink:0,
    };
    //End of that
    //Background color(black)
    fill(0, 0, 0);
    rect(0, 0, 455, 256);

    fill(255, 255, 255);
    //Loop through and display all of the stars in the main menu
    for (var i = 0; i < mainMenu.stars.length; i++) {
        rect(mainMenu.stars[i][0], mainMenu.stars[i][1], 1, 1);
    }
    if (GUI.scene != "deleteFiles") {
        GUI.canDeleteTimer = false;
        GUI.deleteTimer = 0;
    }
    //Display the text
    if (GUI.scene == "main") {
        musicPlaying.nextTrack = "musicTitleScreen";
        musicPlaying.nextDrumTrack = "";
        GUI.maxY = 1;
        text8("DERISORY", 228, 32, 1, "center");
        text82("Play", 228, 128, 1, 0, 0, "center");
        text82("Options", 228, 144, 1, 0, 1, "center");
        //text82("Cartridges", 228, 144, 1, 0, 2, "center");
        //text82("Switch User", 228, 160, 1, 0, 3, "center");
    } else if (GUI.scene == "saveFiles") {
        GUI.maxY = 7;
        text82("SAVE FILES", 228, 32, 1, 0, 15, "center");
        text82((savedTimers[0] > 0) ? "Save 1 " + Math.ceil(savedTimers[0] / 3600) + "m" : "Empty", 228, 80, 1, 0, 0, "center");
        text82((savedTimers[1] > 0) ? "Save 2 " + Math.ceil(savedTimers[1] / 3600) + "m" : "Empty", 228, 96, 1, 0, 1, "center");
        text82((savedTimers[2] > 0) ? "Save 3 " + Math.ceil(savedTimers[2] / 3600) + "m" : "Empty", 228, 112, 1, 0, 2, "center");
        text82((savedTimers[3] > 0) ? "Save 4 " + Math.ceil(savedTimers[3] / 3600) + "m" : "Empty", 228, 128, 1, 0, 3, "center");
        text82((savedTimers[4] > 0) ? "Save 5 " + Math.ceil(savedTimers[4] / 3600) + "m" : "Empty", 228, 144, 1, 0, 4, "center");
        text82("Back", 228, 176, 1, 0, 5, "center");
        text82("Copy File", 228, 208, 1, 0, 6, "center");
        text82("Delete File", 228, 224, 1, 0, 7, "center");
    } else if (GUI.scene == "copyFiles") {
        GUI.maxY = 5;
        text82("COPY FILE", 228, 32, 1, 0, 15, "center");
        text82((savedTimers[0] > 0) ? "Save 1 " + Math.ceil(savedTimers[0] / 3600) + "m" : "Empty", 228, 80, 1, 0, 0, "center");
        text82((savedTimers[1] > 0) ? "Save 2 " + Math.ceil(savedTimers[1] / 3600) + "m" : "Empty", 228, 96, 1, 0, 1, "center");
        text82((savedTimers[2] > 0) ? "Save 3 " + Math.ceil(savedTimers[2] / 3600) + "m" : "Empty", 228, 112, 1, 0, 2, "center");
        text82((savedTimers[3] > 0) ? "Save 4 " + Math.ceil(savedTimers[3] / 3600) + "m" : "Empty", 228, 128, 1, 0, 3, "center");
        text82((savedTimers[4] > 0) ? "Save 5 " + Math.ceil(savedTimers[4] / 3600) + "m" : "Empty", 228, 144, 1, 0, 4, "center");
        text82("CANCEL", 228, 176, 1, 0, 5, "center");
        text82("Select a non-empty file to copy", 228, 208, 1, 0, 15, "center");
    } else if (GUI.scene == "copyingFile") {
        GUI.maxY = 5;
        text82("COPY FILE " + (JSON.parse(GUI.subDisplay[GUI.subDisplay.length - 1]) + 1), 228, 32, 1, 0, 15, "center");
        text82((savedTimers[0] > 0) ? "Save 1 " + Math.ceil(savedTimers[0] / 3600) + "m" : "Empty", 228, 80, 1, 0, 0, "center");
        text82((savedTimers[1] > 0) ? "Save 2 " + Math.ceil(savedTimers[1] / 3600) + "m" : "Empty", 228, 96, 1, 0, 1, "center");
        text82((savedTimers[2] > 0) ? "Save 3 " + Math.ceil(savedTimers[2] / 3600) + "m" : "Empty", 228, 112, 1, 0, 2, "center");
        text82((savedTimers[3] > 0) ? "Save 4 " + Math.ceil(savedTimers[3] / 3600) + "m" : "Empty", 228, 128, 1, 0, 3, "center");
        text82((savedTimers[4] > 0) ? "Save 5 " + Math.ceil(savedTimers[4] / 3600) + "m" : "Empty", 228, 144, 1, 0, 4, "center");
        text82("CANCEL", 228, 176, 1, 0, 5, "center");
        text82("Select an empty file to paste into", 228, 208, 1, 0, 15, "center");
    } else if (GUI.scene == "deleteFiles") {
        GUI.maxY = 5;
        fill(255, 255, 255);
        text82("DELETE FILE", 228, 32, 1, 0, 15, "center");
        text82((savedTimers[0] > 0) ? "Save 1 " + Math.ceil(savedTimers[0] / 3600) + "m" : "Empty", 228, 80, 1, 0, 0, "center");
        text82((savedTimers[1] > 0) ? "Save 2 " + Math.ceil(savedTimers[1] / 3600) + "m" : "Empty", 228, 96, 1, 0, 1, "center");
        text82((savedTimers[2] > 0) ? "Save 3 " + Math.ceil(savedTimers[2] / 3600) + "m" : "Empty", 228, 112, 1, 0, 2, "center");
        text82((savedTimers[3] > 0) ? "Save 4 " + Math.ceil(savedTimers[3] / 3600) + "m" : "Empty", 228, 128, 1, 0, 3, "center");
        text82((savedTimers[4] > 0) ? "Save 5 " + Math.ceil(savedTimers[4] / 3600) + "m" : "Empty", 228, 144, 1, 0, 4, "center");
        text82("CANCEL", 228, 176, 1, 0, 5, "center");
        text82("Select a non-empty file to delete", 228, 208, 1, 0, 15, "center");
        fill(255, 255, 0);
        text82("WARNING: This cannot be undone", 228, 224, 1, 0, 15, "center");
        if (!AkeysDown[90] && Akeys[90] && GUI.y < 5 && GUI.canDeleteTimer && !Akeys[37] && !Akeys[39] && !Akeys[38] && !Akeys[40]) {
            GUI.deleteTimer++;
            if (GUI.deleteTimer > 90) {
                GUI.deleteTimer -= 0.5;
            }
            fill(255, 0, 0, 0.2);
            rect(168, 78 + GUI.y * 16, 110, 13);
            fill(255, 0, 0, 0.5);
            rect(168, 78 + GUI.y * 16, 10 + ceil(GUI.deleteTimer), 13);
            if (GUI.deleteTimer > 100) {
                GUI.deleteTimer = 0;
                window.localStorage.removeItem("derisory_saveData" + GUI.y);
                savedTimers[GUI.y] = 0;
                GUI.scene = "saveFiles";
                playSound("playerDie");
                saveImgTimer = 100;
            }
        } else {
            if (AkeysDown[90] && GUI.deleteTimer == 0) {
                GUI.canDeleteTimer = true;
            }
            GUI.deleteTimer = 0;
            if (Akeys[37] || Akeys[39] || Akeys[38] || Akeys[40] || GUI.y >= 5) {
                GUI.canDeleteTimer = false;
            }
        }
    } else if (GUI.scene == "options") {
        GUI.maxY = 3;
        text8("OPTIONS", 228, 32, 1, "center");
        text82("Audio", 228, 96, 1, 0, 0, "center");
        text82("Video", 228, 112, 1, 0, 1, "center");
        text82("Controls", 228, 128, 1, 0, 2, "center");
        text82("Back", 228, 144, 1, 0, 3, "center");
    } else if (GUI.scene == "optionsAudio") {
        GUI.maxY = 2;
        text8("AUDIO", 228, 32, 1, "center");
        text82("Sound Effects: " + floor(_settings.soundVolume * 10), 228, 96, 1, 0, 0, "center");
        text82("Music: " + floor(_settings.musicVolume * 10), 228, 112, 1, 0, 1, "center");
        if (GUI.y == 0 && AkeysDown[37]) {
            _settings.AsoundVolume -= 10;
            _settings.AsoundVolume = constrain(_settings.AsoundVolume, 0, 100);
            playSound("menuMove");
        } else if (GUI.y == 0 && AkeysDown[39]) {
            _settings.AsoundVolume += 10;
            _settings.AsoundVolume = constrain(_settings.AsoundVolume, 0, 100);
            playSound("menuMove");
        } else if (GUI.y == 1 && AkeysDown[37]) {
            _settings.AmusicVolume -= 10;
            _settings.AmusicVolume = constrain(_settings.AmusicVolume, 0, 100);
            playSound("menuMove");
        } else if (GUI.y == 1 && AkeysDown[39]) {
            _settings.AmusicVolume += 10;
            _settings.AmusicVolume = constrain(_settings.AmusicVolume, 0, 100);
            playSound("menuMove");
        }
        _settings.AmusicVolume = constrain(_settings.AmusicVolume, 0, 100);
        text82("Back", 228, 144, 1, 0, 2, "center");
    } else if (GUI.scene == "optionsVideo") {
        GUI.maxY = 3;
        text8("VIDEO", 228, 32, 1, "center");
        text82("Red Flash: " + (_settings.redFlash ? "On" : "Off"), 228, 96, 1, 0, 0, "center");
        text82("Screen Scale: " + _settings.screenScale, 228, 112, 1, 0, 1, "center");
        text82("Full Screen: " + (_settings.fullScreen ? "On" : "Off"), 228, 128, 1, 0, 2, "center");
        text82("Back", 228, 144, 1, 0, 3, "center");
        if (GUI.y == 0 && AkeysDown[90]) {
            _settings.redFlash = !_settings.redFlash;
        } else if (GUI.y == 1 && AkeysDown[37]) {
            _settings.screenScale--;
            _settings.screenScale = constrain(_settings.screenScale, 1, 5);
            resizeScreen(_settings.screenScale);
            playSound("menuMove");
        } else if (GUI.y == 1 && AkeysDown[39]) {
            _settings.screenScale++;
            _settings.screenScale = constrain(_settings.screenScale, 1, 5);
            resizeScreen(_settings.screenScale);
            playSound("menuMove");
        } else if (GUI.y == 2 && AkeysDown[90]) {
            _settings.fullScreenCheck = 5;
            _settings.fullScreen = !_settings.fullScreen;
            if (_settings.fullScreen) {
                fullscreen();
            } else {
                document.exitFullscreen();
                resizeScreen(_settings.screenScale);
            }
        }
    } else if (GUI.scene == "optionsControls") {
        GUI.maxY = 3;
        GUI.maxX = 0;
        text8("CONTROLS", 228, 32, 1, "center");
        text82("Remap Buttons", 228, 96, 1, 0, 0, "center");
        text82("Reset to Defaults", 228, 112, 1, 0, 1, "center");
        text82("Controller Rumble: " + (_settings.controllerVibration ? "On" : "Off"), 228, 128, 1, 0, 2, "center");
        text82("Back", 228, 144, 1, 0, 3, "center");
        if (GUI.subDisplay == "remapAreYouSure") {
            GUI.y = 1;
            GUI.maxX = 1;
            fill(255, 255, 255);
            rect(116, 72, 222, 112);
            fill(0, 0, 0);
            rect(117, 73, 220, 110);
            fill(255, 255, 255);
            text8("Reset controls to defaults?", 227, 112, 1, "center");
            text82("No", 198, 144, 1, 0, 1, "center");
            text82("Yes", 260, 144, 1, 1, 1, "center");
            if (AkeysDown[37] && GUI.x > 0) {
                GUI.x--;
                playSound("menuMove");
            } else if (AkeysDown[39] && GUI.x < GUI.maxX) {
                GUI.x++;
                playSound("menuMove");
            }
            GUI.x = constrain(GUI.x, 0, 1);
            if (AkeysDown[90]) {
                if (GUI.x == 0) {
                    GUI.x = 0;
                    GUI.subDisplay = "";
                    playSound("menuSelect");
                } else if (GUI.x == 1) {
                    _resetControls();
                    GUI.x = 0;
                    GUI.subDisplay = "remapDone";
                    playSound("menuSelect");
                }
            }
            keysDown = [];
            keys = [];
            AkeysDown = [];
            Akeys = [];
        } else if (GUI.subDisplay == "remapDone") {
            GUI.y = 1;
            GUI.maxX = 0;
            fill(255, 255, 255);
            rect(116, 72, 222, 112);
            fill(0, 0, 0);
            rect(117, 73, 220, 110);
            fill(255, 255, 255);
            text8("Controls Reset", 227, 112, 1, "center");
            text82("Ok", 227, 144, 1, 0, 1, "center");
            GUI.x = constrain(GUI.x, 0, 1);
            if (AkeysDown[90]) {
                GUI.x = 0;
                GUI.subDisplay = "";
                playSound("menuSelect");
            }
            keysDown = [];
            keys = [];
            AkeysDown = [];
            Akeys = [];
        }
        if (GUI.y == 1 && AkeysDown[90]) {
            GUI.subDisplay = "remapAreYouSure";
            playSound("menuSelect");
            keysDown = [];
            keys = [];
            AkeysDown = [];
            Akeys = [];
            for (var j = 0; j < gamepads.length; j++) {
                if (gamepads[j] == undefined) {continue;}
                gamepads[j] = navigator.getGamepads()[j];
                if (gamepads[j] == undefined) {continue;}
                var gamepad = gamepads[j];
                for (var i = 0; i < gamepad.buttons.length; i++) {
                     gamepad.buttons[i].pressed = false;
                }
            }
            GUI.y = 1;
        } else if (GUI.y == 2 && AkeysDown[90]) {
            _settings.controllerVibration = !_settings.controllerVibration;
            if (_settings.controllerVibration) {
                vibrateGamepads(100, 50);//Idk why my variable names are so inconsistent. This won't hinder me later at all.
            }
        }
    } else if (GUI.scene == "optionsControlsRemap") {
        GUI.maxY = 8;
        GUI.maxX = 1;
        text8("REMAP CONTROLS", 228, 32, 1, "center");
        var textShifts = [80, 166, 247 + 48, 328, 409];
      if (GUI.subDisplay == "") {
        //Keyboard
        text8("ACTIONS", textShifts[0], 48, 1, "center");
        text8("Jump:", textShifts[0], 64, 1, "center");
        text8("Attack:", textShifts[0], 80, 1, "center");
        text8("Heal:", textShifts[0], 96, 1, "center");
        text8("Dash:", textShifts[0], 112, 1, "center");
        text8("Up:", textShifts[0], 128, 1, "center");
        text8("Left:", textShifts[0], 144, 1, "center");
        text8("Down:", textShifts[0], 160, 1, "center");
        text8("Right:", textShifts[0], 174, 1, "center");
        //Controller
        text82(buttonNames[controls.Z], textShifts[1], 64, 1, 0, 0, "center");
        text82(buttonNames[controls.X], textShifts[1], 80, 1, 0, 1, "center");
        text82(buttonNames[controls.D], textShifts[1], 96, 1, 0, 2, "center");
        text82(buttonNames[controls.SHIFT], textShifts[1], 112, 1, 0, 3, "center");
        text82(buttonNames[controls.w], textShifts[1], 128, 1, 0, 4, "center");
        text82(buttonNames[controls.a], textShifts[1], 144, 1, 0, 5, "center");
        text82(buttonNames[controls.s], textShifts[1], 160, 1, 0, 6, "center");
        text82(buttonNames[controls.d], textShifts[1], 174, 1, 0, 7, "center");
        //Controller
        var showControllerArray = controllerBindings;

        for (var j = 0; j < 8; j++) {
            var thisControllerBinds = "";
            for (var i = 0; i < controllerBindings.length; i++) {
                if (controllerBindings2[controllerBindings[i]] == ["A","X","Y","RT","D-Pad UP","D-Pad LEFT","D-Pad DOWN","D-Pad RIGHT"][j]) {
                    if (thisControllerBinds.length > 0) {thisControllerBinds += ", ";}
                    thisControllerBinds += controllerBindings2[constControllerBindings[i]];
                }
            }
            text82(thisControllerBinds, textShifts[2], 64 + j * 16, 1, 1, j, "center");
        } 
        text82("BACK", 227, 230, 1, 1, 8, "center");
      }
        if (GUI.y == 8) {GUI.x = 1;}
        if (GUI.subDisplay == "remapButton") {
            fill(255, 255, 255);
            rect(116, 47, 222, 162);
            fill(0, 0, 0);
            rect(117, 48, 220, 160);
            fill(255, 255, 255);
            if (GUI.x == 0) {
                text8("Press keyboard button", 227, 128, 1, "center");
                for (var i = 0; i < keysDown.length; i++) {
                    if (AkeysDown[i] == true) {
                        controls[GUI.remmappingButton] = i;
                        i = keysDown.length;
                        GUI.remmappingButton = 0;
                        GUI.subDisplay = "";
                    }
                }
            } else if (GUI.x == 1) {
                text8("Press controller button", 227, 128, 1, "center");
                var buttonIsIndeedPressed = false;
                for (var i = 0; i < AkeysDown.length && !buttonIsIndeedPressed; i++) {
                    if (AkeysDown[i]) {
                        buttonIsIndeedPressed = true;
                    }
                }
                for (var j = 0; j < gamepads.length; j++) {
                    if (gamepads[j] == undefined) {continue;}
                    gamepads[j] = navigator.getGamepads()[j];
                    if (gamepads[j] == undefined) {continue;}
                    var gamepad = gamepads[j];
                    for (var i = 0; i < gamepad.buttons.length; i++) {
                        buttons[j][i] = gamepad.buttons[i].pressed;
                        if (buttonIsIndeedPressed && buttons[j][i] && i != 9) {
                            //You have no idea... or maybe you do?
                            //controllerBindings[[0,2,3,7,12,14,13,15][GUI.y]] = constControllerBindings[i];
                            controllerBindings[i] = constControllerBindings[[0,2,3,7,12,14,13,15][GUI.y]];
                            //controllerBindings2[["Z","X","Y","C","w","a","s","d"][GUI.y]] = "B";
                            //controls[["Z","X","Y","C","w","a","s","d"][GUI.y]] = constControls[constControllerBindings[i]];
                            
                            GUI.remmappingButton = 0;
                            GUI.subDisplay = "";
                        }
                    }
                }
                if (AkeysDown[88]) {
                    GUI.remmappingButton = 0;
                    GUI.subDisplay = "";
                }
            }
            keysDown = [];
            keys = [];
            AkeysDown = [];
            Akeys = [];
        }
        if (AkeysDown[90] && GUI.y < 8 && GUI.subDisplay != "remapButton") {
            for (var j = 0; j < gamepads.length; j++) {
                if (gamepads[j] == undefined) {continue;}
                gamepads[j] = navigator.getGamepads()[j];
                if (gamepads[j] == undefined) {continue;}
                var gamepad = gamepads[j];
                for (var i = 0; i < gamepad.buttons.length; i++) {
                     gamepad.buttons[i].pressed = false;
                }
            }
            GUI.subDisplay = "remapButton";
            GUI.remmappingButton = ["Z","X","D","SHIFT","w","a","s","d"][GUI.y];
        }
    } else if (GUI.scene == "loadGame") {
        musicPlaying.nextTrack = "";
        musicPlaying.nextDrumTrack = "";
        currentScreen = 0;
        loadGame(saveFile);
        //alert(currentArea);
        loadArea(saveData.currentArea);
        if (!loadingArea) {
            currentLevel = levels[saveData.currentScreen];
            currentScreen = saveData.currentScreen;
            background = {};
            if (currentLevel[currentLevel.length - 1][0].background != undefined) {
                background = currentLevel[currentLevel.length - 1][0].background;
            }
            scene = "game";
            updateLevelDisplay();
            updateLevelMusic();
            enemies = [];
            spawnEntities();
            saveData.mapData.areas[saveData.currentArea][saveData.currentScreen] = true;
        }
        resetCutscene();
    }

    if (AkeysDown[40] && GUI.y < GUI.maxY) {
        GUI.y++;
        playSound("menuMove");
        GUI.canDeleteTimer = false;
        GUI.deleteTimer = 0;
    } else if (AkeysDown[38] && GUI.y > 0) {
        GUI.y--;
        playSound("menuMove");
        GUI.canDeleteTimer = false;
        GUI.deleteTimer = 0;
    }
    if (AkeysDown[37] && GUI.x > 0) {
        GUI.x--;
        playSound("menuMove");
    } else if (AkeysDown[39] && GUI.x < GUI.maxX) {
        GUI.x++;
        playSound("menuMove");
    }
    if (AkeysDown[88]) {
        switch(GUI.scene) {
            case "saveFiles":GUI.scene = "main";break;
            case "copyFiles":GUI.scene = "saveFiles";break;
            case "deleteFiles":GUI.scene = "saveFiles";break;
            case "copyingFile":GUI.scene = "copyFiles";break;
            case "options":GUI.scene = "main";saveSettings();break;
            case "optionsAudio":GUI.scene = "options";break;
            case "optionsVideo":GUI.scene = "options";break;
            case "optionsControls":GUI.scene = "options";break;
            case "optionsControlsRemap":GUI.scene = "optionsControls";break;
        }
        GUI.y = 0;
        playSound("menuBack");
    }

    if (AkeysDown[90]) {
        playSound("menuSelect");
        var transitionTos = [];

        if (GUI.scene == "main") {
            transitionTos = ["saveFiles","options","cartridges",false];
        } else if (GUI.scene == "saveFiles") {
            transitionTos = [false, false, false, false, false, "main", "copyFiles", "deleteFiles"];
            if (GUI.y < 5) {
                saveFile = GUI.y;
                GUI.scene = "loadGame";
            }
        } else if (GUI.scene == "copyFiles") {
            transitionTos = ["copyingFile", "copyingFile", "copyingFile", "copyingFile", "copyingFile", "saveFiles"];
            if (GUI.y < 5 && savedTimers[GUI.y] > 0) {
                GUI.subDisplay = "copying " + GUI.y;
            } else if (GUI.y < 5) {
                transitionTos[GUI.y] = false;
            }
        } else if (GUI.scene == "copyingFile") {
            transitionTos = [false, false, false, false, false, "saveFiles"];
            if (GUI.y < 5 && savedTimers[GUI.y] == 0) {
                if (window.localStorage.getItem("derisory_saveData" + GUI.subDisplay[GUI.subDisplay.length - 1]) != undefined) {
                    window.localStorage.setItem("derisory_saveData" + GUI.y, window.localStorage.getItem("derisory_saveData" + GUI.subDisplay[GUI.subDisplay.length - 1]));
                    saveImgTimer = 100;
                    playSound("playerHeal", 0.7);
                }
                transitionTos[GUI.y] = "saveFiles";
                GUI.subDisplay = "";
            }
        } else if (GUI.scene == "deleteFiles") {
            transitionTos = [false, false, false, false, false, "saveFiles"];
            if (GUI.y < 5 && savedTimers[GUI.y] > 0) {
                //GUI.subDisplay = "copying " + GUI.y;
            }
        } else if (GUI.scene == "options") {
            transitionTos = ["optionsAudio","optionsVideo","optionsControls","main"];
        } else if (GUI.scene == "optionsAudio") {
            transitionTos = [false, false, "options"];
        } else if (GUI.scene == "optionsVideo") {
            transitionTos = [false, false, false, "options"];
        } else if (GUI.scene == "optionsControls") {
            transitionTos = ["optionsControlsRemap", false, false,"options"];
        } else if (GUI.scene == "optionsControlsRemap") {
            transitionTos = [false, false, false, false, false, false, false, false, "optionsControls"];
        }

        if (transitionTos.length > 0 && transitionTos[floor(GUI.y)] != false) {
            if (transitionTos[floor(GUI.y)] == "main" && GUI.scene == "options") {
                saveSettings();
            }
            GUI.scene = transitionTos[floor(GUI.y)];
            if (GUI.scene == "saveFiles") {
                for (var i = 0; i < 5; i++) {
                    var savedTimer = window.localStorage.getItem("derisory_saveData" + i);
                    if (savedTimer != undefined) {savedTimer = JSON.parse(savedTimer);savedTimers[i] = savedTimer.timePlayed;}
                }
            }
            GUI.y = 0;
        }
    }

    //Keep the GUI selector from going away from the buttons
    GUI.x = constrain(GUI.x, 0, GUI.maxX);
    GUI.y = constrain(GUI.y, 0, GUI.maxY);
};