/*
Meme I found
THEOLOGIANS THEN: If a tree falls and no one is around, does it make a sound?
THEOLOGIANS NOW: If there is a bug but you can't reproduce it, is the bug still there?
*/

//TODO:
//Error with save data when starting in room 2 in the plains area and triggering the cutscene when losing to the pancake beetle
var saveFile = 0;

var saveDataOG = {
    lastAreaVisited:"Plains",
    currentArea:"plains",//plains, infestedMines, sleepFrogSwamp
    currentScreen:0,//What screen the player is on(default 0), 5
    spawnLocations:[1296, 392, 0, 0],//1296,392, 200,180, 400,196, 1264, 192
    abilities:{"sword":false, "dash":false, "wallJump":false, "cDash":false, "gravity":false,"jetboots":false,"slime":false,"ledgeGrab":false},
    //abilities:{"sword":true, "dash":false, "wallJump":true, "cDash":true,"gravity":true,"jetboots":true,"slime":false,"ledgeGrab":false},
    coins:[false, false, false, false, false, false, false, false, false],
    itemPickups:{},//Things that have been picked up(health, extra healing, keys, etc)
    bosses:{"redFlyBoss":false,"miningRobotBoss":false,"tinyKnightBoss":false},//Which bosses have been defeated(and how)
    oneTimers:{
        "plains":[false,false,false,false,false,false,false,false],
        "infestedMines":[false,false,false,false,false,false,false],
        "sleepFrogSwamp":[false,false,false,false,false,false,false],
    },//What has been defeated or destroyed(i.e. big enemies, one time secrets, one time breakable walls)
    campfires:[],//Which campfires have been lit
    timePlayed:0,
    flasks:{equipped:0,"unlocked":[true,false,false,false,false,false,false,false,false,false,false,false,false,false]},
    mapData:{
      "owned":false,
      "areas":{
        "plains":[false,false,false,false,false,false,false,false,false,false,],
        "infestedMines":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,],
        "sleepFrogSwamp":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,],
        //"infestedMines":[true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,],
      },
      "visitedAreas":{"plains":false,"infestedMines":false},
    },
    updateMap:{},
};
saveDataOG.updateMap = JSON.parse(JSON.stringify(saveDataOG.mapData));

var saveData = JSON.parse(JSON.stringify(saveDataOG));


function saveSettings() {
    saveImgTimer = 100;
    window.localStorage.setItem("derisory_settings", JSON.stringify(_settings));
    window.localStorage.setItem("derisory_controls", JSON.stringify(controls));
    window.localStorage.setItem("derisory_controllerBindings", JSON.stringify(controllerBindings));
    //alert(window.localStorage.getItem("derisory_settings"));
};
function loadSettings() {
    var loadData = window.localStorage.getItem("derisory_settings");
    if (loadData != undefined) {
        loadData = JSON.parse(loadData);
        _settings = loadData;
    }
    loadData = window.localStorage.getItem("derisory_controls");
    if (loadData != undefined) {
        loadData = JSON.parse(loadData);
        controls = loadData;
    }
    loadData = window.localStorage.getItem("derisory_controllerBindings");
    if (loadData != undefined) {
        loadData = JSON.parse(loadData);
        controllerBindings = loadData;
    }
};

function saveGame(slot) {
    saveImgTimer = 100;
    players[0].checkPointX = players[0].x;
    players[0].checkPointY = players[0].y;
    saveData.flasks.equipped = players[0].flaskSelected;
    saveData.currentArea = currentArea;
    saveData.currentScreen = currentScreen;
    window.localStorage.setItem("derisory_saveData" + slot, JSON.stringify(saveData));
    //alert(window.localStorage.getItem("derisory_saveData" + slot));
};

function loadGame(slot) {
    var loadData = window.localStorage.getItem("derisory_saveData" + slot);
    if (loadData == undefined) {
        saveData = JSON.parse(JSON.stringify(saveDataOG));
    } else {
        loadData = JSON.parse(loadData);
        saveData = loadData;
    }
        //scrollX = -saveData.spawnLocations[0] + 227;
        //scrollY = -saveData.spawnLocations[1] + 128;
        for (var i = 0; i < players.length; i++) {
            players[i].flaskSelected = saveData.flasks.equipped;
            players[i].abilities = saveData.abilities;
            players[i].velX = 0;
            players[i].velY = 0;
            players[i].dashTimer = 0;
            players[i].attackTimer = 0;
            players[i].cDashTimer = 0;
            players[i].dir = 1 - (i * 2);
            players[i].hp = players[i].maxHp;
            players[i].flaskCount = players[i].maxFlaskCount;
            scrollX = 0;
            scrollY = 0;
            currentScreen = saveData.currentScreen;
            if (saveData.spawnLocations.length >= 4) {
                players[i].x = saveData.spawnLocations[i * 2];
                players[i].y = saveData.spawnLocations[i * 2 + 1];
                players[i].checkPointX = saveData.spawnLocations[i * 2];
                players[i].checkPointY = saveData.spawnLocations[i * 2 + 1];
                scrollX -= players[i].x - 227;
                scrollY -= players[i].y - 128;
            }
            scrollX /= players.length;
            scrollY /= players.length;
        }

};                          
/*
THEOLOGIANS IN THE FUTURE: ooh ooh aah aah... b a n a n a
This is a humorous reference to the return to monke memes
*/