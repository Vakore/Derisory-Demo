var cutscene = {
    fade:0,
};
const resetCutscene = function() {
    cutscene = {
        fade:0,
        type:0,
        timer:0,
        subTimer:1,
        movePlayer:[0, 0],
        player1:0,
        player:{velX:0,velY:1,dir:1,sprite:"idle",sprite2:"idleLeg",sprite3:0,walkTimer:1},
    };
};
resetCutscene();

//Cutscene props(used for specific things. I.E. water flooding a room, a wall destroying, etc.
var cutsceneBreakWall1 = function(x, y) {
    this.x = x;
    this.y = y;
    this.immuneTimers = [0,0];
    this.inWater = false;
};


cutsceneBreakWall1.prototype.run = function() {
    if (cutscene.timer == 530) {
        shakeScreen(-1, -1, 2, 2, 50);
        for (var i = 0; i < 5; i++) {
            enemies.push(new bounceParticle(this.x + 16, this.y + 8 + (16 * i), 1, 1, random(1, 3), random(-3, 3), 0.5, 100));
            enemies.push(new bounceParticle(this.x + 16, this.y + 8 + (16 * i), 1, 1, random(1, 3), random(-3, 3), 0.5, 100));
            enemies.push(new bounceParticle(this.x + 16, this.y + 8 + (16 * i), 1, 1, random(1, 3), random(-3, 3), 0.5, 100));
        }
        playSound("wallHurt");
    } else if (cutscene.timer == 200) {
        playSound("waterBreakWall", 0.35);
        playSound("wallBreak");
        shakeScreen(-2, -2, 2, 2, 50);
        for (var i = 0; i < 5; i++) {
            enemies.push(new bounceParticle(this.x + 16, this.y + 8 + (16 * i), 1, 1, random(1, 3), random(-3, 3), 0.5, 100));
            enemies.push(new bounceParticle(this.x + 16, this.y + 8 + (16 * i), 1, 1, random(1, 3), random(-3, 3), 0.5, 100));
            enemies.push(new bounceParticle(this.x + 16, this.y + 8 + (16 * i), 1, 1, random(1, 3), random(-3, 3), 0.5, 100));
        }
    }

    if (cutscene.timer <= 200 && cutscene.timer > 0) {
        cutscene.objWidth += 16;
        if (players[0].x > this.x + 220) {
            cutscene.objWidth += 16;
        }
    }
    if (this.x + cutscene.objWidth > players[0].x) {
        resetCutscene();
        cutscene.fade = 1;
        cutscene.type = "afterBatBoss";
        cutscene.timer = 500;
        this.ded = true;
    }
};

cutsceneBreakWall1.prototype.drawFront = function() {
    for (var i = 0; i < 5; i++) {
        if (cutscene.timer <= 530 && cutscene.timer > 200) {
            var iWillDrawWall = notEnemySprites["breakWallRight1"];
            iWillDrawWall.h = 16;
            image("notEnemySprites", iWillDrawWall, this.x, this.y + i * 16);
            if (cutscene.timer > 300) {
                cutscene.timer -= 0.25;
            } else if (cutscene.timer > 295) {
                cutscene.timer = Math.floor(cutscene.timer);
            }
        } else if (cutscene.timer <= 0) {
            image("blockSprites", {x:137,y:18,w:16,h:16}, this.x, this.y + i * 16);
        } else if (cutscene.timer <= 200) {
            fill(0, 0, 0);
            rect(this.x, this.y + i * 16, 16, 16);
            fill(0, 0, 255, 0.5);
            rect(this.x, this.y + i * 16, cutscene.objWidth, 16);
        }
    }

};

//Managing the cutscenes
const doCutscene = function() {
    if (!loadingArea) {
        cutscene.timer--;
    }
    switch(cutscene.type) {
      case "revive":
        cutscene.player.sprite2 = 0;
        cutscene.player.sprite3 = 0;
        if (cutscene.timer <= 60) {
            cutscene.fade -= 0.05;
            if (keysDown[controls.X]) {
                cutscene.fade -= 0.20;
                cutscene.timer -= 6;
            }
            cutscene.player.velX = 0;
            cutscene.player.velY = 1;
            cutscene.player.dir = 1;
            if (keys[controls.X] && cutscene.fade <= 0) {
                cutscene.timer = 0;
                cutscene.player.velY = 0;
            }
        }
        cutscene.player.velX = 0;
        cutscene.player.velY = 5;
        if (cutscene.timer > 50) {
            cutscene.player.sprite = "lay" + 1;
        } else if (cutscene.timer > 43) {
            cutscene.player.sprite = "lay" + 2;
        } else if (cutscene.timer > 36) { 
            cutscene.player.sprite = "lay" + 3;
        } else if (cutscene.timer > 29) { 
            cutscene.player.sprite = "lay" + 4;
        } else if (cutscene.timer > 22) { 
            cutscene.player.sprite = "lay" + 5;
        } else if (cutscene.timer > 15) {
            cutscene.player.sprite = "lay" + 6;
        } else if (cutscene.timer > 7) {
            cutscene.player.sprite = "weak3";
        } else if (cutscene.timer > 3) {
            cutscene.player.sprite = "weak2";
        } else {
            cutscene.player.sprite = "idle";
            cutscene.player.sprite2 = "idleLeg";
        }
      break;
      case 1:
        if (floor(cutscene.player.walkTimer) > 8) {cutscene.player.walkTimer = 1;}
        cutscene.player.sprite = "run" + floor(cutscene.player.walkTimer);
        cutscene.player.sprite2 = "run" + floor(cutscene.player.walkTimer) + "Leg";
        cutscene.player.sprite3 = 0;
        if (cutscene.timer <= 100) {
            if (cutscene.timer < 15) {cutscene.timer += 0.5;}
            cutscene.player.sprite = "pickUpSword" + constrain((8 - floor(constrain(cutscene.timer - 55, 5, 80) / 5)), 1, 7);
            cutscene.player.sprite2 = 0;
            if (cutscene.timer == 70) {playSound("pickUpSword");}
        }
        cutscene.player.velX = 0;
        cutscene.player.velY = 5;
        cutscene.player.dir = 1;
        if (players[cutscene.player1].x < cutscene.movePlayer[0] - 1) {
            cutscene.player.velX = 2;
            cutscene.player.walkTimer += 0.2;
        } else if (players[cutscene.player1].x > cutscene.movePlayer[0] + 1) {
            cutscene.player.velX = -2;
            cutscene.player.dir = -1;
            cutscene.player.walkTimer += 0.2;
        } else if (cutscene.timer > 500) {
            cutscene.timer = 100;
        }
        if (cutscene.timer <= 1) {
            itemGet = true;
        }
      break;
      case "jetboots":
        if (floor(cutscene.player.walkTimer) > 8) {cutscene.player.walkTimer = 1;}
        cutscene.player.sprite = "run" + floor(cutscene.player.walkTimer);
        cutscene.player.sprite2 = "run" + floor(cutscene.player.walkTimer) + "Leg";
        cutscene.player.sprite3 = 0;
        if (floor(cutscene.timer) == 80) {
            playSound("playerCutsceneJumpBoots");
        }
        if (cutscene.timer <= 110) {
            cutscene.player.sprite = "pickUpBoots" + constrain((9 - floor(constrain(cutscene.timer - 60, 5, 90) / 5)), 1, 8);
            cutscene.player.sprite2 = 0;
        }
        cutscene.player.velX = 0;
        cutscene.player.velY = 1;
        cutscene.player.dir = 1;
        if (players[cutscene.player1].x < cutscene.movePlayer[0] - 1) {
            cutscene.player.velX = 2;
            cutscene.player.walkTimer += 0.2;
        } else if (players[cutscene.player1].x > cutscene.movePlayer[0] + 1) {
            cutscene.player.velX = -2;
            cutscene.player.dir = -1;
            cutscene.player.walkTimer += 0.2;
        } else if (cutscene.timer > 500) {
            cutscene.timer = 100;
        }
        if (cutscene.timer <= 1) {
            itemGet = true;
        }
      break;

      //Losing to the first boss
      case "batBoss":
          cutscene.player.velY = 5;
          //cutscene.player.dir = -1;
          cutscene.subTimer += 0.1;
          if (floor(cutscene.subTimer) > 3) {cutscene.subTimer = 3;}
          cutscene.player.sprite = "weak" + floor(cutscene.subTimer);
          cutscene.player.sprite2 = 0;
          cutscene.player.sprite3 = 0;
      break;
      case "afterBatBoss":
          loadArea("infestedMines");
          if (!loadingArea) {
              cutscene.player.dir = 1;
              if (cutscene.fade >= 1) {
                  loadLevel(0);
                  players[0].x = 150;
                  players[0].y = 184;
                  if (players[1] != undefined) {
                      players[1].x = 173;
                      players[1].y = 184;
                  }
                  cutscene.player.walkTimer = 1;
              }
              if (cutscene.timer < 400) {
                  cutscene.player.velY = 4;
                  cutscene.fade -= 0.01;
                  if (saveData.currentArea != currentArea) {
                      saveData.spawnLocations = [150, 184, 173, 184];
                      saveGame(saveFile);
                  }
                  cutscene.player.sprite2 = 0;
                  cutscene.player.sprite3 = 0;
                  if (cutscene.timer >= 0) {
                      //cutscene.player.sprite = "weak" + 3;
                      if (cutscene.timer > 300) {
                          cutscene.player.sprite = "lay" + 1;
                      } else if (cutscene.timer > 270) {
                          cutscene.player.sprite = "lay" + 2;
                      } else if (cutscene.timer > 240) {
                          cutscene.player.sprite = "lay" + 1;
                      } else if (cutscene.timer > 210) {
                          cutscene.player.sprite = "lay" + 2;
                      } else if (cutscene.timer > 180) { 
                          cutscene.player.sprite = "lay" + 3;
                      } else if (cutscene.timer > 173) { 
                          cutscene.player.sprite = "lay" + 4;
                      } else if (cutscene.timer > 166) { 
                          cutscene.player.sprite = "lay" + 5;
                      } else if (cutscene.timer > 159) { 
                          cutscene.player.sprite = "lay" + 6;
                      } else if (cutscene.timer > 152) { 
                          cutscene.player.sprite = "weak" + 3;
                      } else if (cutscene.timer > 145) { 
                          cutscene.player.sprite = "weak" + 2;
                      } else { 
                          cutscene.player.sprite = "idle";
                          cutscene.player.sprite2 = "idleLeg";
                          cutscene.timer -= 10;
                      }
                  } //else {
                      /*cutscene.player.velX = 2;
                      cutscene.player.walkTimer += 0.2;
                      if (floor(cutscene.player.walkTimer) > 8) {cutscene.player.walkTimer = 1;}
                      cutscene.player.sprite = "run" + floor(cutscene.player.walkTimer);
                      cutscene.player.sprite2 = "run" + floor(cutscene.player.walkTimer) + "Leg";
                      cutscene.player.sprite3 = 0;*/
                      //cutscene.timer -= 5;
                  //}
              }
          }
        break;
        case "redFlyBossIntro":
            cutscene.player.velX = 0;
            cutscene.player.velY = 5;
            cutscene.player.sprite = "idle";
            cutscene.player.sprite2 = "idleLeg";
            cutscene.player.sprite3 = 0;
            cutscene.player.dir = -1;
            if (cutscene.timer <= 410 && cutscene.timer > 350) {
                cutscene.player.sprite = "surprised6";
            } else if (cutscene.timer > 410 && cutscene.timer < 490) {
                cutscene.player.dir = 1;
                cutscene.player.sprite = "surprised" + constrain(floor(5 - (cutscene.timer - 477.5) / 3.125), 1, 4);
                cutscene.player.sprite2 = 0;
                if (cutscene.timer < 415) {
                    cutscene.player.sprite = "surprised5";
                }
            }
            if (cutscene.timer <= 10) {
                musicPlaying.nextTrack = "musicRedFlyBoss";
                musicPlaying.volumeTo = 0.55;
                resetSound("musicRedFlyBoss");
                musicPlaying.smoothTransition = false;
            }
        break;
        case "tinyKnightBossIntro":
            cutscene.player.velX = 0;
            cutscene.player.velY = 5;
            cutscene.player.sprite = "idle";
            cutscene.player.sprite2 = "idleLeg";
            cutscene.player.sprite3 = 0;
            cutscene.player.dir = 1;
            if (cutscene.timer <= 10) {
                musicPlaying.nextTrack = "musicTinyKnightBoss";
                musicPlaying.volumeTo = 0.8;
                resetSound("musicTinyKnightBoss");
                musicPlaying.nextDrumTrack = "musicTinyKnightBossDrums";
                musicPlaying.drumVolumeTo = 0.01;
                resetSound("musicTinyKnightBossDrums");
                musicPlaying.smoothTransition = false;
            }
        break;
        case "collectCoin":
            if (floor(cutscene.player.walkTimer) > 8) {cutscene.player.walkTimer = 1;}
            cutscene.player.sprite = "run" + floor(cutscene.player.walkTimer);
            cutscene.player.sprite2 = "run" + floor(cutscene.player.walkTimer) + "Leg";
            cutscene.player.sprite3 = 0;
            cutscene.player.velX = 0;
            cutscene.player.velY = 4;
            cutscene.player.dir = 1;
            if (players[cutscene.player1].x < cutscene.movePlayer[0] - 1) {
                cutscene.player.velX = 2;
                cutscene.player.walkTimer += 0.2;
            } else if (players[cutscene.player1].x > cutscene.movePlayer[0] + 1) {
                cutscene.player.velX = -2;
                cutscene.player.dir = -1;
                cutscene.player.walkTimer += 0.2;
            } else {
                cutscene.player.velX = 0;
                cutscene.player.sprite = "idle";
                cutscene.player.sprite2 = "idleLeg";
            }
        break;
    }
};