/*
Planned Moves:

0: move
2: jump towards player
3: swipe at player
4: toss three rocks
5(strong): Bite at player

The beetle should retreat during both the losing cutscene and the winning cutscene
*/
const pancakeBeetleBossImgs = {
    "idle1":{x:1,y:1,w:80,h:26,shiftX:-7,shiftY:0},
    "idle1Legs":{x:1,y:30,w:82,h:27,shiftX:-8,shiftY:15},
    /*"walk1Legs":{x:1,y:67,w:78,h:27,shiftX:-4,shiftY:15},
    "walk2Legs":{x:1,y:95,w:61,h:27,shiftX:0,shiftY:15},
    "walk3Legs":{x:63,y:95,w:58,h:27,shiftX:2,shiftY:15},
    "walk4Legs":{x:122,y:95,w:53,h:27,shiftX:4,shiftY:15},
    "walk5Legs":{x:176,y:95,w:45,h:27,shiftX:6,shiftY:15},
    "walk6Legs":{x:222,y:95,w:42,h:27,shiftX:8,shiftY:15},
    "walk7Legs":{x:268,y:95,w:51,h:27,shiftX:4,shiftY:15},
    "walk8Legs":{x:320,y:95,w:56,h:27,shiftX:5,shiftY:15},
    "walk9Legs":{x:372,y:95,w:50,h:27,shiftX:6,shiftY:15},*/
    "walk1Legs":{x:1,y:93,w:78,h:27,shiftX:-6,shiftY:15},
    "walk2Legs":{x:80,y:93,w:66,h:28,shiftX:0,shiftY:15},
    "walk3Legs":{x:147,y:93,w:58,h:27,shiftX:4,shiftY:15},
    "walk4Legs":{x:206,y:93,w:50,h:23,shiftX:8,shiftY:15},
    "walk5Legs":{x:257,y:93,w:59,h:27,shiftX:4,shiftY:15},
    "walk6Legs":{x:317,y:93,w:67,h:27,shiftX:0,shiftY:15},
    "walk7Legs":{x:385,y:93,w:59,h:27,shiftX:4,shiftY:15},
    "walk8Legs":{x:445,y:93,w:50,h:23,shiftX:8,shiftY:15},
    "jump1":{x:82,y:1,w:78,h:28,shiftX:-6,shiftY:0},
    "jump1Legs":{x:84,y:30,w:74,h:21,shiftX:-4,shiftY:19},
    "jump2":{x:161,y:1,w:84,h:23,shiftX:-9,shiftY:0},
    "jumpIdleLegs":{x:159,y:30,w:78,h:24,shiftX:-6,shiftY:19},
    "jump2Legs":{x:1,y:58,w:82,h:24,shiftX:-8,shiftY:19},
    "jump3":{x:246,y:1,w:86,h:19,shiftX:-10,shiftY:0},
    "jump3Legs":{x:238,y:30,w:90,h:26,shiftX:-12,shiftY:15},
    "jump4":{x:333,y:1,w:90,h:19,shiftX:-12,shiftY:0},
    "jump4Legs":{x:329,y:30,w:90,h:26,shiftX:-12,shiftY:15},
    "attack1":{x:424,y:1,w:82,h:27,shiftX:-8,shiftY:15},
    "attack2":{x:424,y:29,w:82,h:27,shiftX:-8,shiftY:15},
    "attack3":{x:424,y:57,w:88,h:27,shiftX:-8,shiftY:15},
    "attack4":{x:330,y:57,w:93,h:27,shiftX:-8,shiftY:15},
    "attack5":{x:236,y:57,w:93,h:31,shiftX:-8,shiftY:11},
    "attack6":{x:145,y:55,w:90,h:34,shiftX:-8,shiftY:8},
    "attack7":{x:507,y:1,w:81,h:27,shiftX:-8,shiftY:15},
    "attack8":{x:507,y:29,w:74,h:27,shiftX:-8,shiftY:15},
    "attack9":{x:513,y:57,w:74,h:27,shiftX:-8,shiftY:15},

    "swipe1":{x:512,y:85,w:16,h:18,shiftX:74,shiftY:14},
    "swipe2":{x:495,y:85,w:33,h:23,shiftX:57,shiftY:14},
    "swipe3":{x:495,y:85,w:14,h:15,shiftX:57,shiftY:14},

    "egg1":{x:495,y:109,w:18,h:18,shiftX:-1,shiftY:-1},
    "egg2":{x:514,y:109,w:20,h:16,shiftX:-2,shiftY:0},
    "egg3":{x:535,y:109,w:16,h:18,shiftX:0,shiftY:-2},
    "eggCrack1":{x:552,y:109,w:18,h:18,shiftX:-1,shiftY:-1},
    "eggCrack2":{x:571,y:109,w:18,h:18,shiftX:-1,shiftY:-1},
    "eggCrack3":{x:590,y:109,w:18,h:18,shiftX:-1,shiftY:-1},
};

var pancakeBeetleBossProjectile = function(x, y, velX, velY) {
    this.x = x;
    this.y = y;
    this.w = 16;
    this.h = 16;
    this.velX = velX;
    this.velY = velY;
    this.ded = false;
    this.hp = 0;
    this.immuneTimers = [-10, -10];
    this.inWater = false;
    this.sprite = "egg1";
    this.spriteTimer = 1;
    this.aliveTimer = 4;
    this.tag = "pancakeBeetleEgg";
    this.canSpawn = true;
};
pancakeBeetleBossProjectile.prototype.run = function() {
    this.velY += 0.1;
    this.spriteTimer += 0.1;
    if (this.spriteTimer >= 5) {
        this.spriteTimer = 1;
    }
    this.sprite = "egg" + [1,2,1,3][floor(this.spriteTimer) - 1];
    if (this.aliveTimer == 4) {
        this.x += this.velX;
        this.y += this.velY;
        checkCollisions(this);
        damageBox(this.x + 3, this.y + 3, this.w - 6, this.h - 6, 1);
    } else if (!this.ded) {
        this.sprite = "eggCrack" + (4 - floor(this.aliveTimer));
        this.aliveTimer -= 0.2;
        if (this.aliveTimer <= 1) {
            this.ded = true;
        }
    }
};
pancakeBeetleBossProjectile.prototype.draw = function() {
    //fill(255, 255, 255);
    //rect(round(this.x), round(this.y), this.w, this.h);
    image("pancakeBeetleBossSprites", pancakeBeetleBossImgs[this.sprite], this.x, this.y);
};

pancakeBeetleBossProjectile.prototype.wallTop = function() {this.aliveTimer -= 0.2;this.velY = 0;};
pancakeBeetleBossProjectile.prototype.wallLeft = function() {this.aliveTimer -= 0.2;this.velX = 0;};
pancakeBeetleBossProjectile.prototype.wallRight = function() {this.aliveTimer -= 0.2;this.velX = 0;};
pancakeBeetleBossProjectile.prototype.wallBottom = function() {this.aliveTimer -= 0.2;this.velY = 0;};

var pancakeBeetleBoss = function(x, y) {
    this.legPositions = [
        [
            [6,4], [15,1], [22,0], [31,4], [36,6], [45,6], [50,4], [59,0], [66,1], [75,4],//x1,y1
            [0,26], [5,26], [18,26], [29,26], [35,26], [46,26], [52,26], [63,26], [76,26], [81,26],//x2,y2
        ],[
            [6,4], [15,1], [22,0], [31,4], [36,6], [45,6], [50,4], [59,0], [66,1], [75,4],//x1,y1
            [2,23], [7,23], [20,23], [31,23], [37,23], [43,26], [49,26], [60,26], [72,26], [78,26],//x2,y2
        ],
    ];
    this.legPosOffs = [
        [3,-3, -3,0, 0,0, 0,0],
        [6,-4, -5,0, 0,0, 0,0],
        [9,-6, -7,0, 2,0, -2,0],
        [12,-8, -9,0, 4,0, -4,0],
        [15,-9, -11,0, 6,0, -6,0],
        [16,-9, -13,0, 8,0, -8,0],
        [19,-6, -15,-4, 10,0, -10,0],
        [22,-3, -17,-6, 12,0, -12,0],
        [24,0, -18,-8, 13,0, -14,0],
        [23,0, -20,-10, 15,0, -16,0],
        [21,0, -22,-12, 16,0, -18,0],
        [18,0, -20,-14, 17,0, -20,0],
        [12,0, -14,-15, 19,0, -24,0],
        [6,0, -7,-15, 22,0, -28,0],
        [0,0, -1,-13, 26,0, -30,0],
        //[-3,0, 3,-12, 28,0, -31,0],
        //[-6,0, 6,-10, 30,0, -32,0],
        //[-9,0, 9,-8, 32,0, -33,0],
        //[-12,0, 12,-6, 34,0, -34,0],
        //[26,0, -19,-9, 16,0, -16,0],
    ];
    this.immuneTimers = [-10, -10];
    this.inWater = false;
    this.x = x;
    this.y = y;
    this.velX = 0;
    this.velY = 0;
    this.w = 66;
    this.h = 42;
    this.hp = 40;
    this.flyDownTimer = 0;//200;
    this.alreadyShook = false;
    this.attackTimer = 0;//250;
    this.dir = 1;
    this.target = floor(random(0, players.length - 1));
    this.sprite = "idle1";
    this.sprite2 = "idle1Legs";
    this.sprite3 = 0;
    this.isGrounded = false;
    this.walkTimer = 1;
    this.headX = 0;
    this.headY = 0;
    this.children = [];
};

pancakeBeetleBoss.prototype.run = function() {
    if (this.flyDownTimer > 0) {
        this.flyDownTimer -= 2;
        this.velY = 2;
        if (this.flyDownTimer == 0) {this.velY = -5;}
    } else {
        this.velY += 0.3;
        this.attackTimer--;
        if (this.attackTimer < 0 && this.isGrounded) {
            this.attack = floor(random(0, 4));
            //Only do attack 1(wing smack down) if the player is close to the bat
            if (this.attack == 1 && players[this.target].x + 14 < this.x - 80 | players[this.target].x > this.x + this.w + 80) {
                //this.attack += round(random(0, 1) + 0.5);
            }
            this.attack = constrain(this.attack, 0, 3);
            if (this.attack == 3 && this.children.length >= 6) {
                this.attack = floor(random(0, 3));
                this.attack = constrain(this.attack, 0, 2);
            }
            //Decide which attack to do
            this.dir = (players[this.target].x + 7 > this.x + this.w / 2) ? 1 : -1;
            switch (this.attack) {
              case 0:
                this.attackTimer = 110;
                playSound("pancakeBeetleBossJump1");
              break;
              case 1:
                this.dir = (players[this.target].x + 7 > this.x + this.w / 2) ? 1 : -1;
                this.attackTimer = 70;
              break;
              case 2:
                this.attackTimer = 75;
                playSound("pancakeBeetleBossSwipe1");
              break;
              case 3:
                this.attackTimer = 100;
                playSound("pancakeBeetleBossShoot1");
              break;
            }
        }
    }
    this.x += this.velX;
    this.y += this.velY;
    var wasGrounded = this.isGrounded;
    this.isGrounded = false;
    checkCollisions(this);
    this.sprite = "idle1";
    this.sprite2 = 0;
    this.sprite3 = 0;
    if (this.hp > 0) {
        //attackBox(this.x, this.y, this.w, this.h, this);
        //damageBox(this.x, this.y, this.w, this.h, 1);
        //fill(255, 0, 0, 0.5);
        attackBox(this.x - 2, this.y + 14, this.w + 4, this.h - 14, this);
        attackBox(this.x + 6, this.y + 7, this.w - 12, 7, this);
        attackBox(this.x + 14, this.y + 3, this.w - 28, 4, this);
        damageBox(this.x - 2, this.y + 17, this.w + 4, this.h - 20, 1);
        damageBox(this.x + 8, this.y + 12, this.w - 16, 4, 1);
        damageBox(this.x + 14, this.y + 7, this.w - 28, 4, 1);
        if (this.attack == 2 && this.attackTimer > 35 && this.attackTimer < 45) {
            //fill(0, 0, 255, 0.3);
            damageBox(-12 + this.x + this.w / 2 + ((this.dir > 0) ? 1 : -1) * 42, this.y + 20, 24, this.h - 20, 1);
        }
    } else if (cutscene.timer <= 0 && cutscene.type != "afterBatBoss" && cutscene.type != "batBoss") {
            //make this victory
            resetCutscene();
            cutscene.objWidth = 16;
            cutscene.timer = 600;
            cutscene.type = "batBoss";
            this.velY = -7;
            this.velX = ((players[0].x) - (this.x + 32)) / 48;
            this.attackTimer = 1000;
            this.dir = -1;
    }
    if (this.isGrounded && screenShake.timer <= 5 && this.attack != 1 & this.attackTimer <= 1) {
        //if (players[this.target].x + 7 < this.x + 32) {this.dir = -1;} else {this.dir = 1;}
        if (cutscene.timer > 531) {cutscene.timer = 531;}
    }
    for (var i = 0; i < players.length; i++) {
        if (players[i].hp == 1 && cutscene.timer <= 0 && cutscene.type != "afterBatBoss" && cutscene.type != "batBoss") {
            resetCutscene();
            cutscene.objWidth = 16;
            cutscene.timer = 600;
            cutscene.type = "batBoss";
            this.velY = -10;
            this.velX = ((80 * 16) - (this.x + 32)) / 50;
            this.attackTimer = 1000;
            this.attack = -1;
        }
    }


    if (this.attack == 0 && this.attackTimer > 80) {
        this.headY = 5;
        this.velX = 0;
    } if (this.attack == 0 && this.attackTimer == 80) {
        playSound("pancakeBeetleBossJump2");
        this.velY = -10;
        this.velX = ((players[this.target].x + 7) - (this.x + this.w / 2)) / 50;
        this.alreadyShook = false;
    } else if (this.attack == 1) {
        this.dir = (players[this.target].x + 7 > this.x + this.w / 2) ? 1 : -1;
        this.velX += this.dir * 0.3;
        this.velX = constrain(this.velX, -4, 4);
        if (this.attackTimer == Math.floor(this.attackTimer / 10) * 10) {
            playSound("pancakeBeetleBossRun");
        }
    } else if (this.attack == 2 && this.attackTimer >= 40 && this.attackTimer <= 45) {
        //this.dir = (players[this.target].x + 7 > this.x + this.w / 2) ? 1 : -1;
        if (this.attackTimer == 45) {playSound("pancakeBeetleBossSwipe2");}
        this.velX = this.dir * 10;
    } else if (this.attack == 3 && this.attackTimer == 40) {
        playSound("pancakeBeetleBossShoot2");
        var spawnIndexStart = this.children.length;
        for (var i = spawnIndexStart; i < spawnIndexStart + 3 && i < 7; i++) {
            this.children.push(new pancakeBeetleBossProjectile(this.x + (this.w / 2) - 8, this.y, this.dir * random(1, 3), random(-3, -2)));
        }
        this.headY = 0;
    } else if (this.attack == 3 && this.attackTimer > 40) {
        this.headY = 5 - abs(sin((this.attackTimer - 60) / 5)) * 2;
    }
    this.headX = 0;
    if (this.attack == 2 && this.attackTimer > 30) {
        if (this.attackTimer < 50 && this.attackTimer >= 45 || this.attackTimer >= 35 && this.attackTimer < 40) {this.attackTimer += 0.5;}
        this.sprite2 = "attack" + constrain(floor((80 - this.attackTimer) / 5), 1, 9);
        this.headX = -constrain(floor((80 - this.attackTimer) / 5), 1, 6);
        if (this.attackTimer < 45) {
            if (this.attackTimer > 35) {this.attackTimer -= 0.5;}
            this.headX = 2;
            this.sprite3 = "swipe" + constrain(floor((50 - this.attackTimer) / 5), 1, 3)
        }
    }

    if (!this.isGrounded) {
        if (this.velY < -4) {
            this.sprite = "jump1";
        } else if (this.velY < -2) {
            this.sprite = "idle1";
            this.sprite2 = "jumpIdleLegs";
        }  else if (this.velY < 0) {
            this.sprite = "jump2";
        }  else if (this.velY < 2) {
            this.sprite = "jump3";
        } else {
            this.sprite = "jump4";
        }
    } else if (this.velX != 0 && this.attack != 2 && this.attack != 3) {
        this.headY = sin(this.walkTimer * 1.5);
        this.walkTimer += 0.25;
        if (floor(this.walkTimer) >= 8) {this.walkTimer = 2;}
        this.sprite2 = "walk" + floor(this.walkTimer) + "Legs";
        //this.sprite2 = "walkLegs";
    } else {
        this.walkTimer = 1;
    }
    if (this.sprite2 == 0) {
        this.sprite2 = this.sprite + "Legs";
    }
    for (var i = 0; i < this.children.length; i++) {
        if (this.children[i].immuneTimers != undefined) {
            if (this.children[i].immuneTimers[0] > -10) {this.children[i].immuneTimers[0]--;}
            if (this.children[i].immuneTimers[1] > -10) {this.children[i].immuneTimers[1]--;}
        }
        if (this.children[i].kbTimer > -1) {this.children[i].kbTimer--;}
        this.children[i].run();
        if (this.children[i].tag && this.children[i].tag == "pancakeBeetleEgg" &&
            this.children[i].aliveTimer != 4 && this.children[i].canSpawn) {
            this.children.push(new pancakeBeetle(this.children[i].x, this.children[i].y));
            this.children[i].canSpawn = false;
        }
        if (this.children[i].ded) {
            this.children.splice(i, 1);
            i--;
        }
    }
    if (cutscene.timer > 100 && cutscene.timer < 240) {
        if (cutscene.timer == 239) {playSound("pancakeBeetleBossSwipe1");}
        this.headX = 0;
        this.headY = 0;
        this.sprite2 = "attack" + constrain(floor((240 - cutscene.timer) / 5), 1, 5);
        this.headX = -constrain(floor((240 - cutscene.timer) / 5), 1, 6);
        if (cutscene.timer < 200) {
            if (this.attackTimer > 190) {this.attackTimer -= 0.5;}
            this.headX = 2;
            //this.sprite3 = "swipe" + constrain(floor((190 - cutscene.timer) / 5), 1, 3)if (players[this.target].x + 7 < this.x + 32) {this.dir = -1;} else {this.dir = 1;}
        }
    }
    if (cutscene.timer > 100) {
        cutscene.player.dir = (this.x + this.w / 2 < players[0].x + players[0].w / 2) ? -1 : 1;
        this.dir = (this.x + this.w / 2 < players[0].x + players[0].w / 2) ? 1 : -1;
    }
};

pancakeBeetleBoss.prototype.draw = function() {
    save();
    translate(round(this.x), round(this.y));
    if (this.dir < 0) {translate(this.w, 0);}
    scale(this.dir, 1);
    //rect(40, 10, 5, 10);
    if (checkBlinking(this)) {
        image("pancakeBeetleBossSprites", pancakeBeetleBossImgs[this.sprite2], 0, 0);
        image("pancakeBeetleBossSprites", pancakeBeetleBossImgs[this.sprite], this.headX, this.headY);
    }
    if (this.sprite3 != 0) {
        image("pancakeBeetleBossSprites", pancakeBeetleBossImgs[this.sprite3], 0, 0);
    }
    fill(255, 0, 0);
    restore();
    for (var i = 0; i < this.children.length; i++) {
        this.children[i].draw();
    }
};

pancakeBeetleBoss.prototype.takeDamage = function(amount) {
    this.hp -= amount;
    if (this.hp > 25) {
        playSound("pancakeBeetleBossHurt1");
    } else if (this.hp > 10) {
        playSound("pancakeBeetleBossHurt2");
    } else {
        playSound("pancakeBeetleBossHurt3");
    }
};
pancakeBeetleBoss.prototype.wallTop = function() {
    if (this.velY > 1) {
        this.velX = 0;
    } else if (this.attack != 1) {
        this.velX /= 1.25;
    }
    this.velY = 0;
    this.isGrounded = true;
    if (!this.alreadyShook) {
        playSound("pancakeBeetleBossLand");
        shakeScreen(1, 1, 1, 1, 10);
        this.alreadyShook = true;
    }
};


var pancakeBeetleBossSpawner = function(x, y, w, h, spawnX, spawnY) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.immuneTimers = [0, 0];
    this.inWater = false;
    this.spawnX = spawnX;
    this.spawnY = spawnY;
    this.ded = false;
};

pancakeBeetleBossSpawner.prototype.run = function() {
    var canSpawn = true;
    for (var i = 0; i < players.length; i++) {
        var p = players[i];
        if (p.x + p.w > this.x && p.x < this.x + this.w && p.y + p.h > this.y && p.y < this.y + this.h) {} else {canSpawn = false;}
    }
    if (canSpawn) {
        enemies.push(new pancakeBeetleBoss(this.spawnX, this.spawnY));
        this.ded = true;
    }
};